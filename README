1.  add uses

    <uses-permission android:name="android.permission.CAMERA" />
    <uses-feature android:name="android.hardware.camera" />
    <uses-feature android:name="android.hardware.camera.autofocus" />

2. add AutoFitTextureView class
        public class AutoFitTextureView extends TextureView {

            private int mRatioWidth = 0;
            private int mRatioHeight = 0;

            public AutoFitTextureView(Context context) {
                this(context, null);
            }

            public AutoFitTextureView(Context context, AttributeSet attrs) {
                this(context, attrs, 0);
            }

            public AutoFitTextureView(Context context, AttributeSet attrs, int defStyle) {
                super(context, attrs, defStyle);
            }

            /**
            * Sets the aspect ratio for this view. The size of the view will be measured based on the ratio
            * calculated from the parameters. Note that the actual sizes of parameters don't matter, that
            * is, calling setAspectRatio(2, 3) and setAspectRatio(4, 6) make the same result.
            *
            * @param width  Relative horizontal size
            * @param height Relative vertical size
            */
            public void setAspectRatio(int width, int height) {
                if (width < 0 || height < 0) {
                    throw new IllegalArgumentException("Size cannot be negative.");
                }
                mRatioWidth = width;
                mRatioHeight = height;
                requestLayout();
            }

            @Override
            protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
                super.onMeasure(widthMeasureSpec, heightMeasureSpec);
                int width = MeasureSpec.getSize(widthMeasureSpec);
                int height = MeasureSpec.getSize(heightMeasureSpec);
                if (0 == mRatioWidth || 0 == mRatioHeight) {
                    setMeasuredDimension(width, height);
                } else {
                    if (width < height * mRatioWidth / mRatioHeight) {
                        setMeasuredDimension(width, width * mRatioHeight / mRatioWidth);
                    } else {
                        setMeasuredDimension(height * mRatioWidth / mRatioHeight, height);
                    }
                }
            }
        }
 
3. add fragment_camera2_basic ==>  com.example.dcam.AutoFitTextureView

        <?xml version="1.0" encoding="utf-8"?>
        <RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
            android:layout_width="match_parent"
            android:layout_height="match_parent">

            <com.example.dcam.AutoFitTextureView
                android:id="@+id/texture"
                android:layout_width="wrap_content"
                android:layout_height="wrap_content"
                android:layout_alignParentStart="true"
                android:layout_alignParentTop="true" />

            <FrameLayout
                android:id="@+id/control"
                android:layout_width="match_parent"
                android:layout_height="112dp"
                android:layout_alignParentBottom="true"
                android:layout_alignParentStart="true">

                <Button
                    android:id="@+id/picture"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center"
                    android:text="@string/picture" />

                <ImageButton
                    android:id="@+id/info"
                    android:contentDescription="@string/description_info"
                    style="@android:style/Widget.Material.Light.Button.Borderless"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    android:layout_gravity="center_vertical|right"
                    android:padding="20dp" />

            </FrameLayout>
        </RelativeLayout>
4. setup layout for =>activity_main.xml
    <?xml version="1.0" encoding="utf-8"?>
    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
        android:orientation="vertical"
        android:layout_width="match_parent"
        android:layout_height="match_parent">


        <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools"
            android:id="@+id/front_camera"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:background="#000"
            tools:context="com.example.dcam.MainActivity"
            android:layout_weight="1"
            />

        <FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
            xmlns:tools="http://schemas.android.com/tools"
            android:id="@+id/back_camera"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            tools:context="com.example.dcam.MainActivity"
            android:layout_weight="2"
            />
    </LinearLayout>
5. add values resouce
    <resources>
        <string name="app_name">dcam</string>
        <string name="picture">Picture</string>
        <string name="description_info">Info</string>
        <string name="request_permission">This sample needs camera permission.</string>
        <string name="camera_error">This device does not support Camera2 API.</string>
        <string name="intro_message">test</string>
    </resources>

    <resources>
        <color name="colorPrimary">#008577</color>
        <color name="colorPrimaryDark">#00574B</color>
        <color name="colorAccent">#D81B60</color>
        <color name="control_background">#cc4285f4</color>
    </resources>
6. add class Camera2BasicFragment